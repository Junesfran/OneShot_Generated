-- MySQL Script generated by MySQL Workbench
-- Wed May 14 20:02:49 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema TheStrange
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `TheStrange` ;

-- -----------------------------------------------------
-- Schema TheStrange
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TheStrange` ;
-- -----------------------------------------------------
-- Schema Usuario
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Usuario` ;

-- -----------------------------------------------------
-- Schema Usuario
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Usuario` ;
USE `TheStrange` ;

-- -----------------------------------------------------
-- Table `TheStrange`.`Rasgo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Rasgo` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Rasgo` (
  `nombre` VARCHAR(45) NOT NULL,
  `descripion` BLOB NULL DEFAULT NULL,
  `trasferible` TINYINT NULL DEFAULT NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`HabilidadRasgo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`HabilidadRasgo` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`HabilidadRasgo` (
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(255) NULL DEFAULT NULL,
  `rango` INT NULL DEFAULT NULL,
  `coste` INT NULL DEFAULT NULL,
  `reserva` VARCHAR(45) NULL DEFAULT NULL,
  `HabilidadRasgocol` VARCHAR(45) NULL DEFAULT NULL,
  `Rasgo_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`nombre`),
  INDEX `fk_HabilidadRasgo_Rasgo1_idx` (`Rasgo_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_HabilidadRasgo_Rasgo1`
    FOREIGN KEY (`Rasgo_nombre`)
    REFERENCES `TheStrange`.`Rasgo` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Efecto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Efecto` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Efecto` (
  `idEfecto` INT NOT NULL,
  `tipo` VARCHAR(45) NULL DEFAULT NULL,
  `sugerencia` VARCHAR(255) NULL DEFAULT NULL,
  `Rasgo_nombre` VARCHAR(45) NOT NULL,
  `Rasgo_nombre1` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEfecto`),
  INDEX `fk_Efecto_Rasgo1_idx` (`Rasgo_nombre1` ASC) VISIBLE,
  CONSTRAINT `fk_Efecto_Rasgo1`
    FOREIGN KEY (`Rasgo_nombre1`)
    REFERENCES `TheStrange`.`Rasgo` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Recursion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Recursion` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Recursion` (
  `nombre` VARCHAR(45) NOT NULL,
  `resumen` VARCHAR(255) NULL DEFAULT NULL,
  `nivel` INT NULL DEFAULT NULL,
  `conexionTheStrange` VARCHAR(255) NULL DEFAULT NULL,
  `conexionTierra` VARCHAR(255) NULL DEFAULT NULL,
  `diametro` INT NULL DEFAULT NULL,
  `grosor` INT NULL DEFAULT NULL,
  `largo` INT NULL DEFAULT NULL,
  `chispa` INT NULL DEFAULT NULL,
  `divisa` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`RasgoRecursion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`RasgoRecursion` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`RasgoRecursion` (
  `Recursion_nombre` VARCHAR(45) NOT NULL,
  `Rasgo_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Recursion_nombre`, `Rasgo_nombre`),
  INDEX `fk_RasgoRecursion_Recursion1_idx` (`Recursion_nombre` ASC) VISIBLE,
  INDEX `fk_RasgoRecursion_Rasgo1_idx` (`Rasgo_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_RasgoRecursion_Recursion1`
    FOREIGN KEY (`Recursion_nombre`)
    REFERENCES `TheStrange`.`Recursion` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RasgoRecursion_Rasgo1`
    FOREIGN KEY (`Rasgo_nombre`)
    REFERENCES `TheStrange`.`Rasgo` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`listaTipos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`listaTipos` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`listaTipos` (
  `idTipos` INT NOT NULL,
  `tipo` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`idTipos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Apartado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Apartado` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Apartado` (
  `idApartado` INT NOT NULL,
  `titulo` VARCHAR(45) NULL DEFAULT NULL,
  `texto` BLOB NULL DEFAULT NULL,
  `listaTipos_idTipos` INT NOT NULL,
  `Recursion_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idApartado`),
  INDEX `fk_Apartado_listaTipos1_idx` (`listaTipos_idTipos` ASC) VISIBLE,
  INDEX `fk_Apartado_Recursion1_idx` (`Recursion_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Apartado_listaTipos1`
    FOREIGN KEY (`listaTipos_idTipos`)
    REFERENCES `TheStrange`.`listaTipos` (`idTipos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Apartado_Recursion1`
    FOREIGN KEY (`Recursion_nombre`)
    REFERENCES `TheStrange`.`Recursion` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Arma`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Arma` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Arma` (
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(225) NULL DEFAULT NULL,
  `da√±o` INT NULL DEFAULT NULL,
  `reduccionDificultad` INT NULL DEFAULT NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Armadura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Armadura` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Armadura` (
  `nombre` VARCHAR(45) NOT NULL,
  `costeVigor` INT NULL DEFAULT NULL,
  `reduccionVelocidad` INT NULL DEFAULT NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Equipo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Equipo` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Equipo` (
  `nombre` VARCHAR(45) NOT NULL,
  `nota` VARCHAR(255) NULL DEFAULT NULL,
  `precio` FLOAT NULL DEFAULT NULL,
  `Arma_nombre` VARCHAR(45) NOT NULL,
  `Armadura_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`nombre`),
  INDEX `fk_Equipo_Arma1_idx` (`Arma_nombre` ASC) VISIBLE,
  INDEX `fk_Equipo_Armadura1_idx` (`Armadura_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Equipo_Arma1`
    FOREIGN KEY (`Arma_nombre`)
    REFERENCES `TheStrange`.`Arma` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Equipo_Armadura1`
    FOREIGN KEY (`Armadura_nombre`)
    REFERENCES `TheStrange`.`Armadura` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`EquipoRecursion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`EquipoRecursion` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`EquipoRecursion` (
  `Equipo_nombre` VARCHAR(45) NOT NULL,
  `Recursion_nombre` VARCHAR(45) NOT NULL,
  INDEX `fk_EquipoRecursion_Equipo1_idx` (`Equipo_nombre` ASC) VISIBLE,
  PRIMARY KEY (`Recursion_nombre`),
  CONSTRAINT `fk_EquipoRecursion_Equipo1`
    FOREIGN KEY (`Equipo_nombre`)
    REFERENCES `TheStrange`.`Equipo` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EquipoRecursion_Recursion1`
    FOREIGN KEY (`Recursion_nombre`)
    REFERENCES `TheStrange`.`Recursion` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Artefactos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Artefactos` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Artefactos` (
  `nombre` VARCHAR(45) NOT NULL,
  `nivel` VARCHAR(45) NULL DEFAULT NULL,
  `forma` VARCHAR(45) NULL DEFAULT NULL,
  `Recursion_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`nombre`),
  INDEX `fk_Artefactos_Recursion1_idx` (`Recursion_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Artefactos_Recursion1`
    FOREIGN KEY (`Recursion_nombre`)
    REFERENCES `TheStrange`.`Recursion` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`tiradaEfecto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`tiradaEfecto` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`tiradaEfecto` (
  `idEfecto` INT NOT NULL,
  `tirada` VARCHAR(45) NULL DEFAULT NULL,
  `efecto` VARCHAR(45) NULL DEFAULT NULL,
  `Artefactos_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEfecto`),
  INDEX `fk_tiradaEfecto_Artefactos1_idx` (`Artefactos_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_tiradaEfecto_Artefactos1`
    FOREIGN KEY (`Artefactos_nombre`)
    REFERENCES `TheStrange`.`Artefactos` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Razas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Razas` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Razas` (
  `idRazas` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL DEFAULT NULL,
  `descripcion` VARCHAR(225) NULL DEFAULT NULL,
  PRIMARY KEY (`idRazas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`RazasRecursion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`RazasRecursion` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`RazasRecursion` (
  `Razas_idRazas` INT NOT NULL,
  `Recursion_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Razas_idRazas`, `Recursion_nombre`),
  INDEX `fk_RazasRecursion_Recursion1_idx` (`Recursion_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_RazasRecursion_Razas1`
    FOREIGN KEY (`Razas_idRazas`)
    REFERENCES `TheStrange`.`Razas` (`idRazas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RazasRecursion_Recursion1`
    FOREIGN KEY (`Recursion_nombre`)
    REFERENCES `TheStrange`.`Recursion` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Habilidades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Habilidades` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Habilidades` (
  `idHabilidades` INT NOT NULL,
  `nombre` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`idHabilidades`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`HabilidadesRecursion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`HabilidadesRecursion` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`HabilidadesRecursion` (
  `Habilidades_idHabilidades` INT NOT NULL,
  `Recursion_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Habilidades_idHabilidades`, `Recursion_nombre`),
  INDEX `fk_HabilidadesRecursion_Recursion1_idx` (`Recursion_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_HabilidadesRecursion_Habilidades1`
    FOREIGN KEY (`Habilidades_idHabilidades`)
    REFERENCES `TheStrange`.`Habilidades` (`idHabilidades`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_HabilidadesRecursion_Recursion1`
    FOREIGN KEY (`Recursion_nombre`)
    REFERENCES `TheStrange`.`Recursion` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Descriptor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Descriptor` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Descriptor` (
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`DescriptorRecursion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`DescriptorRecursion` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`DescriptorRecursion` (
  `Descriptor_nombre` VARCHAR(45) NOT NULL,
  `Recursion_nombre` VARCHAR(45) NOT NULL,
  `mejora` VARCHAR(225) NULL DEFAULT NULL,
  PRIMARY KEY (`Descriptor_nombre`, `Recursion_nombre`),
  INDEX `fk_DescriptorRecursion_Recursion1_idx` (`Recursion_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_DescriptorRecursion_Descriptor1`
    FOREIGN KEY (`Descriptor_nombre`)
    REFERENCES `TheStrange`.`Descriptor` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DescriptorRecursion_Recursion1`
    FOREIGN KEY (`Recursion_nombre`)
    REFERENCES `TheStrange`.`Recursion` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`vinculoInicial`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`vinculoInicial` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`vinculoInicial` (
  `idvinculoInicial` INT NOT NULL,
  `descripcion` VARCHAR(225) NULL DEFAULT NULL,
  `Descriptor_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idvinculoInicial`),
  INDEX `fk_vinculoInicial_Descriptor1_idx` (`Descriptor_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_vinculoInicial_Descriptor1`
    FOREIGN KEY (`Descriptor_nombre`)
    REFERENCES `TheStrange`.`Descriptor` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Mejora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Mejora` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Mejora` (
  `nombre` VARCHAR(225) NOT NULL,
  `numero` INT NULL DEFAULT NULL,
  `reserva` VARCHAR(45) NULL DEFAULT NULL,
  `Descriptor_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`nombre`),
  INDEX `fk_Mejora_Descriptor1_idx` (`Descriptor_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Mejora_Descriptor1`
    FOREIGN KEY (`Descriptor_nombre`)
    REFERENCES `TheStrange`.`Descriptor` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`habilidadDescriptor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`habilidadDescriptor` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`habilidadDescriptor` (
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(45) NULL DEFAULT NULL,
  `incapacidad` TINYINT NULL DEFAULT NULL,
  `Descriptor_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`nombre`),
  INDEX `fk_habilidadDescriptor_Descriptor1_idx` (`Descriptor_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_habilidadDescriptor_Descriptor1`
    FOREIGN KEY (`Descriptor_nombre`)
    REFERENCES `TheStrange`.`Descriptor` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Clase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Clase` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Clase` (
  `nombre` VARCHAR(45) NOT NULL,
  `traslacion` VARCHAR(45) NULL DEFAULT NULL,
  `minimoDispositivos` INT NULL DEFAULT NULL,
  `descripcion` VARCHAR(225) NULL DEFAULT NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Poderes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Poderes` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Poderes` (
  `Nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(225) NULL DEFAULT NULL,
  `coste` INT NULL DEFAULT NULL,
  `rango` INT NULL DEFAULT NULL,
  `proeza` TINYINT NULL DEFAULT NULL,
  `Clase_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Nombre`),
  INDEX `fk_HabilidadesClase_Clase1_idx` (`Clase_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_HabilidadesClase_Clase1`
    FOREIGN KEY (`Clase_nombre`)
    REFERENCES `TheStrange`.`Clase` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Vinculo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Vinculo` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Vinculo` (
  `idVinculo` INT NOT NULL,
  `trasfondo` VARCHAR(45) NULL DEFAULT NULL,
  `Clase_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idVinculo`),
  INDEX `fk_Vinculo_Clase1_idx` (`Clase_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Vinculo_Clase1`
    FOREIGN KEY (`Clase_nombre`)
    REFERENCES `TheStrange`.`Clase` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Caracteristicas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Caracteristicas` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Caracteristicas` (
  `idCaracteristicas` INT GENERATED ALWAYS AS (1) STORED,
  `nombre` VARCHAR(45) NULL DEFAULT NULL,
  `reserva` VARCHAR(45) NULL DEFAULT NULL,
  `Ventaja` VARCHAR(45) NULL,
  `Clase_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idCaracteristicas`),
  INDEX `fk_Caracteristicas_Clase1_idx` (`Clase_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Caracteristicas_Clase1`
    FOREIGN KEY (`Clase_nombre`)
    REFERENCES `TheStrange`.`Clase` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Dispositivo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Dispositivo` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Dispositivo` (
  `idDispositivo` INT NOT NULL,
  `efecto` BLOB NULL DEFAULT NULL,
  PRIMARY KEY (`idDispositivo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`FormasDispositivo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`FormasDispositivo` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`FormasDispositivo` (
  `Dispositivo_idDispositivo` INT NOT NULL,
  `Recursion_nombre` VARCHAR(45) NOT NULL,
  `aspecto` VARCHAR(45) NULL DEFAULT NULL,
  INDEX `fk_FormasDispositivo_Dispositivo1_idx` (`Dispositivo_idDispositivo` ASC) VISIBLE,
  INDEX `fk_FormasDispositivo_Recursion1_idx` (`Recursion_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_FormasDispositivo_Dispositivo1`
    FOREIGN KEY (`Dispositivo_idDispositivo`)
    REFERENCES `TheStrange`.`Dispositivo` (`idDispositivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_FormasDispositivo_Recursion1`
    FOREIGN KEY (`Recursion_nombre`)
    REFERENCES `TheStrange`.`Recursion` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`TiradaEfectoDispositivo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`TiradaEfectoDispositivo` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`TiradaEfectoDispositivo` (
  `idTirada` INT NOT NULL,
  `tirada` VARCHAR(45) NULL DEFAULT NULL,
  `efecto` VARCHAR(45) NULL DEFAULT NULL,
  `Dispositivo_idDispositivo` INT NOT NULL,
  PRIMARY KEY (`idTirada`),
  INDEX `fk_TiradaEfectoDispositivo_Dispositivo1_idx` (`Dispositivo_idDispositivo` ASC) VISIBLE,
  CONSTRAINT `fk_TiradaEfectoDispositivo_Dispositivo1`
    FOREIGN KEY (`Dispositivo_idDispositivo`)
    REFERENCES `TheStrange`.`Dispositivo` (`idDispositivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Criatura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Criatura` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Criatura` (
  `Nombre` VARCHAR(45) NOT NULL,
  `Nivel` INT NULL DEFAULT NULL,
  `descripcion` BLOB NULL DEFAULT NULL,
  `motivacion` VARCHAR(225) NULL DEFAULT NULL,
  `entorno` VARCHAR(45) NULL DEFAULT NULL,
  `salud` INT NULL DEFAULT NULL,
  `da√±o` INT NULL DEFAULT NULL,
  `movimiento` VARCHAR(45) NULL DEFAULT NULL,
  `combate` BLOB NULL DEFAULT NULL,
  `iteraccion` VARCHAR(225) NULL DEFAULT NULL,
  `uso` VARCHAR(45) NULL DEFAULT NULL,
  `botin` VARCHAR(45) NULL DEFAULT NULL,
  `Recursion_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Nombre`),
  INDEX `fk_Criatura_Recursion1_idx` (`Recursion_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Criatura_Recursion1`
    FOREIGN KEY (`Recursion_nombre`)
    REFERENCES `TheStrange`.`Recursion` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`ley`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`ley` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`ley` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(225) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`LeyRecursion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`LeyRecursion` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`LeyRecursion` (
  `ley_nombre` INT NOT NULL,
  `Recursion_nombre` VARCHAR(45) NOT NULL,
  INDEX `fk_LeyRecursion_ley1_idx` (`ley_nombre` ASC) VISIBLE,
  INDEX `fk_LeyRecursion_Recursion1_idx` (`Recursion_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_LeyRecursion_ley1`
    FOREIGN KEY (`ley_nombre`)
    REFERENCES `TheStrange`.`ley` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_LeyRecursion_Recursion1`
    FOREIGN KEY (`Recursion_nombre`)
    REFERENCES `TheStrange`.`Recursion` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`Conexion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`Conexion` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`Conexion` (
  `idConexion` INT NOT NULL,
  `descripcion` VARCHAR(225) NULL DEFAULT NULL,
  `Rasgo_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idConexion`),
  INDEX `fk_Conexion_Rasgo1_idx` (`Rasgo_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Conexion_Rasgo1`
    FOREIGN KEY (`Rasgo_nombre`)
    REFERENCES `TheStrange`.`Rasgo` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TheStrange`.`HabilidadesClase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TheStrange`.`HabilidadesClase` ;

CREATE TABLE IF NOT EXISTS `TheStrange`.`HabilidadesClase` (
  `idHabilidad` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL DEFAULT NULL,
  `descripcion` VARCHAR(225) NULL DEFAULT NULL,
  `rango` VARCHAR(45) NULL DEFAULT NULL,
  `Clase_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idHabilidad`),
  INDEX `fk_HabilidadesClase_Clase2_idx` (`Clase_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_HabilidadesClase_Clase2`
    FOREIGN KEY (`Clase_nombre`)
    REFERENCES `TheStrange`.`Clase` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `Usuario` ;

-- -----------------------------------------------------
-- Table `Usuario`.`Usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`Usuario` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`Usuario` (
  `idUsuario` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `contrase√±a` VARCHAR(45) NULL,
  PRIMARY KEY (`idUsuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`Manual`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`Manual` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`Manual` (
  `nombre` VARCHAR(45) NOT NULL,
  `referenciaBD` VARCHAR(45) NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`Campa√±a`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`Campa√±a` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`Campa√±a` (
  `idCampa√±a` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(225) NULL,
  `Manual_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idCampa√±a`, `Manual_nombre`),
  INDEX `fk_Campa√±a_Manual1_idx` (`Manual_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Campa√±a_Manual1`
    FOREIGN KEY (`Manual_nombre`)
    REFERENCES `Usuario`.`Manual` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`Ficha_TheStrange`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`Ficha_TheStrange` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`Ficha_TheStrange` (
  `id` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `clase` VARCHAR(45) NULL,
  `experiencia` INT NULL,
  `esfuerzo` INT NULL,
  `limiteDispositivos` INT NULL,
  `recuperacion` VARCHAR(10) NULL,
  `trasfondo` BLOB NULL,
  `descriptor` VARCHAR(45) NULL,
  `Usuario_idUsuario` INT NOT NULL,
  `Manual_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Ficha_TheStrange_Usuario1_idx` (`Usuario_idUsuario` ASC) VISIBLE,
  INDEX `fk_Ficha_TheStrange_Manual1_idx` (`Manual_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Ficha_TheStrange_Usuario1`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `Usuario`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ficha_TheStrange_Manual1`
    FOREIGN KEY (`Manual_nombre`)
    REFERENCES `Usuario`.`Manual` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`UsuarioCampa√±a`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`UsuarioCampa√±a` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`UsuarioCampa√±a` (
  `Usuario_idUsuario` INT NOT NULL,
  `Campa√±a_idCampa√±a` INT NOT NULL,
  `Ficha_TheStrange_id` INT NOT NULL,
  `Ficha_TheStrange_Manual_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Usuario_idUsuario`, `Campa√±a_idCampa√±a`, `Ficha_TheStrange_id`, `Ficha_TheStrange_Manual_nombre`),
  INDEX `fk_UsuarioCampa√±a_Campa√±a1_idx` (`Campa√±a_idCampa√±a` ASC) VISIBLE,
  INDEX `fk_UsuarioCampa√±a_Ficha_TheStrange1_idx` (`Ficha_TheStrange_id` ASC, `Ficha_TheStrange_Manual_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_UsuarioCampa√±a_Usuario`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `Usuario`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UsuarioCampa√±a_Campa√±a1`
    FOREIGN KEY (`Campa√±a_idCampa√±a`)
    REFERENCES `Usuario`.`Campa√±a` (`idCampa√±a`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UsuarioCampa√±a_Ficha_TheStrange1`
    FOREIGN KEY (`Ficha_TheStrange_id` , `Ficha_TheStrange_Manual_nombre`)
    REFERENCES `Usuario`.`Ficha_TheStrange` (`id` , `Manual_nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`Mejora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`Mejora` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`Mejora` (
  `idMejora` INT NOT NULL,
  `descripcion` VARCHAR(225) NULL,
  `cogida` TINYINT NULL,
  `Ficha_TheStrange_id` INT NOT NULL,
  PRIMARY KEY (`idMejora`),
  INDEX `fk_Mejora_Ficha_TheStrange1_idx` (`Ficha_TheStrange_id` ASC) VISIBLE,
  CONSTRAINT `fk_Mejora_Ficha_TheStrange1`
    FOREIGN KEY (`Ficha_TheStrange_id`)
    REFERENCES `Usuario`.`Ficha_TheStrange` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`Caracteristicas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`Caracteristicas` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`Caracteristicas` (
  `nombre` VARCHAR(45) NOT NULL,
  `reservaMax` INT NULL,
  `reservaAct` INT NULL,
  `ventaja` INT NULL,
  `Ficha_TheStrange_id` INT NOT NULL,
  PRIMARY KEY (`nombre`),
  INDEX `fk_Caracteristicas_Ficha_TheStrange1_idx` (`Ficha_TheStrange_id` ASC) VISIBLE,
  CONSTRAINT `fk_Caracteristicas_Ficha_TheStrange1`
    FOREIGN KEY (`Ficha_TheStrange_id`)
    REFERENCES `Usuario`.`Ficha_TheStrange` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`Notas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`Notas` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`Notas` (
  `idNotas` INT NOT NULL,
  `texto` VARCHAR(225) NULL,
  `Ficha_TheStrange_id` INT NOT NULL,
  PRIMARY KEY (`idNotas`),
  INDEX `fk_Notas_Ficha_TheStrange1_idx` (`Ficha_TheStrange_id` ASC) VISIBLE,
  CONSTRAINT `fk_Notas_Ficha_TheStrange1`
    FOREIGN KEY (`Ficha_TheStrange_id`)
    REFERENCES `Usuario`.`Ficha_TheStrange` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`ListaDispositivos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`ListaDispositivos` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`ListaDispositivos` (
  `nombre` VARCHAR(45) NOT NULL,
  `forma` VARCHAR(45) NULL,
  `efecto` VARCHAR(225) NULL,
  `Ficha_TheStrange_id` INT NOT NULL,
  PRIMARY KEY (`nombre`),
  INDEX `fk_ListaDispositivos_Ficha_TheStrange1_idx` (`Ficha_TheStrange_id` ASC) VISIBLE,
  CONSTRAINT `fk_ListaDispositivos_Ficha_TheStrange1`
    FOREIGN KEY (`Ficha_TheStrange_id`)
    REFERENCES `Usuario`.`Ficha_TheStrange` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`Recursion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`Recursion` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`Recursion` (
  `idRecursion` INT NOT NULL,
  `rasgo` VARCHAR(45) NULL,
  `dinero` INT NULL,
  `armadura` INT NULL,
  `apariencia` BLOB NULL,
  `raza` VARCHAR(45) NULL,
  `sexo` VARCHAR(10) NULL,
  `actual` TINYINT NULL,
  `Ficha_TheStrange_id` INT NOT NULL,
  PRIMARY KEY (`idRecursion`),
  INDEX `fk_Recursion_Ficha_TheStrange1_idx` (`Ficha_TheStrange_id` ASC) VISIBLE,
  CONSTRAINT `fk_Recursion_Ficha_TheStrange1`
    FOREIGN KEY (`Ficha_TheStrange_id`)
    REFERENCES `Usuario`.`Ficha_TheStrange` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`Competencias`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`Competencias` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`Competencias` (
  `nombre` VARCHAR(45) NOT NULL,
  `especializado` TINYINT NULL,
  `descripcion` VARCHAR(225) NULL,
  `Ficha_TheStrange_id` INT NULL,
  `Recursion_idRecursion` INT NULL,
  PRIMARY KEY (`nombre`),
  INDEX `fk_Competencias_Ficha_TheStrange1_idx` (`Ficha_TheStrange_id` ASC) VISIBLE,
  INDEX `fk_Competencias_Recursion1_idx` (`Recursion_idRecursion` ASC) VISIBLE,
  CONSTRAINT `fk_Competencias_Ficha_TheStrange1`
    FOREIGN KEY (`Ficha_TheStrange_id`)
    REFERENCES `Usuario`.`Ficha_TheStrange` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Competencias_Recursion1`
    FOREIGN KEY (`Recursion_idRecursion`)
    REFERENCES `Usuario`.`Recursion` (`idRecursion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`Equipo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`Equipo` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`Equipo` (
  `idEquipo` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(225) NULL,
  `da√±o` INT NULL,
  `modificador` INT NULL,
  `arma` TINYINT NULL,
  `Recursion_idRecursion` INT NOT NULL,
  PRIMARY KEY (`idEquipo`),
  INDEX `fk_Equipo_Recursion1_idx` (`Recursion_idRecursion` ASC) VISIBLE,
  CONSTRAINT `fk_Equipo_Recursion1`
    FOREIGN KEY (`Recursion_idRecursion`)
    REFERENCES `Usuario`.`Recursion` (`idRecursion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`Habilidades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`Habilidades` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`Habilidades` (
  `nombre` VARCHAR(45) NOT NULL,
  `coste` VARCHAR(45) NULL,
  `descripcion` VARCHAR(225) NULL,
  `Ficha_TheStrange_id` INT NULL,
  `Competencias_nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`nombre`),
  INDEX `fk_Habilidades_Ficha_TheStrange1_idx` (`Ficha_TheStrange_id` ASC) VISIBLE,
  INDEX `fk_Habilidades_Competencias1_idx` (`Competencias_nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Habilidades_Ficha_TheStrange1`
    FOREIGN KEY (`Ficha_TheStrange_id`)
    REFERENCES `Usuario`.`Ficha_TheStrange` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Habilidades_Competencias1`
    FOREIGN KEY (`Competencias_nombre`)
    REFERENCES `Usuario`.`Competencias` (`nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`TiradasRecuperacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`TiradasRecuperacion` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`TiradasRecuperacion` (
  `id` INT NOT NULL,
  `tiempo` VARCHAR(45) NULL,
  `descansado` TINYINT NULL,
  `Ficha_TheStrange_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_TiradasRecuperacion_Ficha_TheStrange1_idx` (`Ficha_TheStrange_id` ASC) VISIBLE,
  CONSTRAINT `fk_TiradasRecuperacion_Ficha_TheStrange1`
    FOREIGN KEY (`Ficha_TheStrange_id`)
    REFERENCES `Usuario`.`Ficha_TheStrange` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Usuario`.`IndicadorDa√±o`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Usuario`.`IndicadorDa√±o` ;

CREATE TABLE IF NOT EXISTS `Usuario`.`IndicadorDa√±o` (
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(45) NULL,
  `cansado` TINYINT NULL,
  `Ficha_TheStrange_id` INT NOT NULL,
  PRIMARY KEY (`nombre`),
  INDEX `fk_IndicadorDa√±o_Ficha_TheStrange1_idx` (`Ficha_TheStrange_id` ASC) VISIBLE,
  CONSTRAINT `fk_IndicadorDa√±o_Ficha_TheStrange1`
    FOREIGN KEY (`Ficha_TheStrange_id`)
    REFERENCES `Usuario`.`Ficha_TheStrange` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `TheStrange`.`Recursion`
-- -----------------------------------------------------
START TRANSACTION;
USE `TheStrange`;
INSERT INTO `TheStrange`.`Recursion` (`nombre`, `resumen`, `nivel`, `conexionTheStrange`, `conexionTierra`, `diametro`, `grosor`, `largo`, `chispa`, `divisa`) VALUES ('Earth', ' Earth is the third planet from the sun, and the humans on Earth are still emerging from a relatively recent evolutionary ‚ÄúGreat Leap Forward‚Äù to become the intelligent masters of their world. Though many relics of their hominid past yet persist in their psyche, humans have made great strides culturally, and they might one day become a species capable of becoming interplanetary. If not for the Strange. Only a tiny percentage of Earth‚Äôs population is quickened, and an even smaller number know about the Strange. The truth is dangerous and devastating, and so far at least, the organizations that monitor or exploit the dark energy network find it in their best interest to keep it a secret.', 5, 'No direct connection; trips to the Strange require a trip through a recursion that have a connection to the Strange', NULL, 12740, 0, 0, 100, 'Dollar');
INSERT INTO `TheStrange`.`Recursion` (`nombre`, `resumen`, `nivel`, `conexionTheStrange`, `conexionTierra`, `diametro`, `grosor`, `largo`, `chispa`, `divisa`) VALUES ('Ardeyn', '  Ardeyn is a recursion of extravagant sorcery, mystic blades sheathed in living souls, and an evil god called Lotan the Sinner whose prison is the world. At its core, Lotan burns. Dragons, soulshorn, homunculi of the Betrayer, invaders from alternate recursions, demons of Lotan, and other insidious threats that hide in ancient qephilim ruins are everpresent in Ardeyn. Once, Ardeyn was guarded from Lotan the Sinner by the Maker, his Seven Incarnations, and their angelic qephilim servants. But when they fell long ago, they left Ardeyn open to attack. Now mortals (humans and fallen qephilim alike) have taken up the fight to protect the place known as the Land of the Curse.', 3, ' Creatures native to Ardeyn can see and travel directly into (or fall into) the Strange from the edge of the recursion. Creatures native to the Strange can see into Ardeyn, but cannot normally enter.', ' Various gates', NULL, 160, 1450, 80, 'gold');
INSERT INTO `TheStrange`.`Recursion` (`nombre`, `resumen`, `nivel`, `conexionTheStrange`, `conexionTierra`, `diametro`, `grosor`, `largo`, `chispa`, `divisa`) VALUES ('Ruk', ' Ruk has hidden in Earth‚Äôs shoals since Rbefore humanity evolved. Creatures that Rwere never human populate Ruk, because Rfiction from somewhere else birthed this Rrecursion. Ruk is a land of amazing technology, Rmiracles of biological enhancement, and Rfeuds that have burned since before humanity Revolved. RIn Ruk, the walls of the world are a literal fact, Rvisible as massive organimer spars that pierce, Rprotect, and lie shattered across the landscape. ROutside the relative safety of Harmonious, the Rcapital city, threats abound in the form of spore Rworms, venom troopers, constructs from the RQinod Singularity, and glial storms. RRuk‚Äôs factions, powerful and ancient, strive Ralways against each other. Lately, their strife is Rcoming to a head, and the fate of Earth hangs Rin the balance.', 4, 'Anyone in Ruk can see the Strange in the distance. At the edge of the recursion (called the Periphery), this view is very clear, while elsewhere it is pale and misty. Typically creatures in the Strange cannot see Ruk, nor enter it.', 'Various gates', NULL, 320, 80, 100, 'Bit');
INSERT INTO `TheStrange`.`Recursion` (`nombre`, `resumen`, `nivel`, `conexionTheStrange`, `conexionTierra`, `diametro`, `grosor`, `largo`, `chispa`, `divisa`) VALUES ('THE STRANGE', ' The Strange is composed of what physicists and astronomers on Earth call dark energy (or, more precisely, dark energy is the expression that the network takes as it intersects our own universe of regular matter). Within its immense and ever-expanding volume, it‚Äôs capable of hosting almost limitless amounts of information. That expansion continues to occur at an ever-accelerating rate, and as the Strange swells, it expands the universe along with it. Over its billions of years of existence, entire worlds have taken seed within the Strange, grown, and flowered with their own unique sets of rules to govern them. These rules have no  boundaries, but once they‚Äôre set, they‚Äôre set, firming up a portion of the Strange with a new reality called a recursion. The Strange, also called the Chaosphere, was intentionally constructed by the Precursors‚Äî technologically advanced aliens‚Äîbillions of years ago to facilitate intergalactic travel across the universe. The aliens would upload themselves into the dark energy data web, then  ‚Äúprint‚Äù themselves anew at some distant star, without having to travel the light years between the two locations in the normal universe. Something went wrong in the network, and the aliens lost control. In the billions of years since, the Strange has continued to expand. As it did, the planetovores that dwell within it swallowed civilization after civilization that innocently ‚Äúpinged‚Äù the dark energy network, and in so doing, provided a bridge to that civilization‚Äôs world.', 0, NULL, ' None known (it would be extremely dangerous for the Earth if any existed)', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `TheStrange`.`Recursion` (`nombre`, `resumen`, `nivel`, `conexionTheStrange`, `conexionTierra`, `diametro`, `grosor`, `largo`, `chispa`, `divisa`) VALUES ('Atom Nocturne', ' In Atom Nocturne, everyone is youthful, glamorous, and amazing. Minds sparkle with power and energy. One‚Äôs place in Atom Nocturne is determined by the power of one‚Äôs Talent, and Talent is categorized into several recognized classes (which have colorful names, like everything in Atom Nocturne, but might be recognized by outsiders as telepathy, telekinesis, pyrogenesis, precognition, and bioenhancement). In Atom Nocturne, people live in a postmodern cityscape, party in underground raves high on the Talent of famous DJs, and compete in citywide tournaments under the Splendor Dome where the winners are institutionalized like war heroes. But Atom Nocturne is not without its flaws. The heights of psychic ability are too much for some to manage. Their minds collapse inward into evil knots where self-aggrandizement and personal gain push everything else aside, including any shred of moral behavior. They are known as the Fallen, and each one has a different likeness and a unique and dangerous Talent to contend with. But some of the same heroes who prove themselves amid the cheering and adoration of the city tournaments have the opportunity to bring even the most powerful Fallen to heel. ', 5, 'Several individuals have Talents that grant access to the Strange in a variety of different ways', ' A few gates', NULL, NULL, NULL, 35, 'Dollar');
INSERT INTO `TheStrange`.`Recursion` (`nombre`, `resumen`, `nivel`, `conexionTheStrange`, `conexionTierra`, `diametro`, `grosor`, `largo`, `chispa`, `divisa`) VALUES ('Cataclyst', ' Hopeful futurists imagined that the Singularity‚Äîthe point when computer and biological innovation spiked so quickly that predicting trends was no longer possible‚Äî would usher in a new golden age for humans, turning them into demigods. That is not the way it happened, at least not in this recursion created by the fictional bleed from several dystopian tales. Instead, the Singularity created a runaway transformation across the planet that devastated it almost beyond recognition. Fledgling AIs attempted to consolidate their minds and protect themselves. Nuclear nation states, confused and frightened by the surveillance data their systems fed them, lashed out with nuclear bombardments, creating a secondary disaster. Robotic drones swarmed, soldiers hyped up on a cocktail of experimental military drugs meant to improve their bodies and minds engaged each other, and billions of civilians were caught in the middle. In the aftermath, the world is a different place (though this recursion contains only a relatively small part of it). The ruins of what came before encrust the landscape: mutated forests, radioactive cityscapes, gelatinous seas, a piece of the moon fallen to Earth, and even stranger things. Unbelievable creatures stalk Cataclyst, including thinking cockroaches, giant lizards, relic robots programmed to kill, and the mutated remnant of humanity itself, a large fraction of which possess incredible powers. ', 4, ' The radiation haze at the bottom of certain bombed-out craters serves as connections to the Strange, but inflicts 10 points of radiation damage when used', 'Various gates', NULL, NULL, NULL, 25, NULL);
INSERT INTO `TheStrange`.`Recursion` (`nombre`, `resumen`, `nivel`, `conexionTheStrange`, `conexionTierra`, `diametro`, `grosor`, `largo`, `chispa`, `divisa`) VALUES ('Crow hollow', ' Crow Hollow is most known for its Glittering Market, an always-open bazaar that features shopkeepers who hail from alternate recursions. The Glittering Market is spread across the branches of a massive tree. Beyond the tree branches, only clouds are visible in an endless-seeming blue sky. The Beak Mafia of Crow Hollow offers protection to most shops in return for small monthly fees. Crow Hollow was formed from a distillation of fictional leakage from a variety of sources depicting ravens and crows as sapient creatures. Natives come in several varieties, but all are a partly humanoid variation on a crow or raven, including the human-sized natives, which to the eyes of a human recursor visitor, are crow-human hybrids who wear clothes. The residents live in small homes built of wood and thatch, though the more well-to-do keep mansions on the higher branches.', 3, ' A creature (or flying vehicle) that flies far enough out into the sky surrounding the great tree can enter the Strange.', 'One inapposite gate', NULL, NULL, NULL, 25, 'Crow Coins');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TheStrange`.`Razas`
-- -----------------------------------------------------
START TRANSACTION;
USE `TheStrange`;
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (1, 'Humans', NULL);
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (2, 'Qephilim', ' Even without the Incarnations, the Seven Rules persist today, keeping Lotan imprisoned and the Strange fenced out, but everything is on much shakier ground. Today, the most visible signs that the Incarnations once walked Ardeyn are the qephilim. Qephilim are a race descended from immortal angelic beings who served the Maker and his Incarnations. In the past, seven qephilim kindred groups each pledged to a particular Incarnation. During the Age of Myth, before the arrival of humans, magnificent qephilim cities dotted the breadth, interior, and even the skies above Ardeyn. But long before the Betrayal, Lotan nearly broke free. During this near-apocalypse, most of the qephilim cities were destroyed in the cataclysm. Afterward, qephilim numbers were a fraction of what they‚Äôd been, so rebuilding was difficult. Later when the Betrayal occurred and the Incarnations failed, the qephilim became mortal, too. They faced three choices: become part of human society in Ardeyn, live apart from it, or enter the Strange in search of someplace new. Each kindred is distinctive from the others in the coloration, size, demeanor, and distinguishing features of its members, but every qephilim has a mythlight: a glow of light usually no brighter than a candle that either hovers nearby or glows like a nimbus around a particular qephilim.');
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (3, 'Qephilim of War', ' These warrior qephilim served the Incarnation of War. Many disavowed War and over time became known as the Free Battalion. Qephilim of the Free Battalion serve as mercenaries across Ardeyn, and (usually) pledge themselves to causes that serve the goals of civilization and the preservation of Ardeyn as a repudiation of the Betrayal. These mercenaries are often found battling sark, homunculi of the Betrayer, rogue soulmancers of the Court of Sleep, vermin from the Strange, demon infestations, and other threats.');
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (4, 'Qephilim of Death', ' Of all the qephilim, the Qephilim of Death (also called the Court of Sleep) retain much of the authority previously afforded them when the Incarnation of Death still walked Ardeyn. These so-called shadow-kin see to the dead of Ardeyn in the Night Vault.');
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (5, 'Qephilim of Lore', ' These scholars and philosophers, who are also called keepers, maintained the history and lore of Ardeyn in secret libraries stocked with winding scrolls and lit by wandering soulglints. When the Incarnation of Lore disappeared, so did most keepers and, with them, knowledge of the locations of their hidden caches of lore.');
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (6, 'Qephilim of Silence', ' Not much is known about the monitors, which is another term for the Qephilim of Silence, because they served merely to observe Ardeyn and report back only to the Incarnation of Silence. No one has seen a monitor in over a century‚Äîat least no one credible.');
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (7, 'Qephilim of Commerce', ' Trade and commerce in present-day Ardeyn don‚Äôt seem much affected by the lack of an Incarnation to watch over the transfer of wealth. But the Qephilim of Commerce, who are also called the Court of Coin, are now much reduced in power and influence, and they still inhabit some of their ancient cities, built during the Age of Myth, under the warm surface of Oceanus‚Äôs waters.');
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (8, 'Qephilim of Law', ' After the Incarnation of Law was slain by War, surviving qephilim of Law fled into the Strange, looking for a place of their own. None are believed to remain in Ardeyn.');
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (9, 'Qephilim of Desire', ' Even when the Incarnation of Desire (also called the Incarnation of Love) was manifest, few ever saw a qephilim of this fleeting sort, and now they exist only as rumor.');
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (10, 'Lost Qephilim', ' When a qephilim loses its way completely, regardless of the Incarnation it or its ancestors once served, it becomes an animalistic savage that knows only anger and hunger. These fallen qephilim are known as sark. Some believe sark now serve Lotan‚Äôs subconscious will and that a sark‚Äôs unstoppable savagery is merely an extension of Lotan‚Äôs desire to tear down the prison that holds him.');
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (11, 'Mutants', ' Many ‚Äúhumans‚Äù of Cataclyst are actually mutants who‚Äôve changed thanks to exposure to mutagens from a variety of sources (though a few are the descendants of people who received military genetic engineering gone wrong). Some mutants have hideous deformities and are outcasts. Other mutants possess incredible powers and flaunt their mutations as a sign of superiority, power, and influence. Their mutations are seen as a blessing, not a curse. Some people believe them to be divine. Recursors who translate into Cataclyst can choose to be mutants. As a special exception to the rules of translation, in Cataclyst those who become mutants lose all benefits granted by their descriptor (but not the inabilities, if any). In the place of the benefits granted by their descriptor, a visitor gains one harmful mutation and one powerful mutation. A PC can also have as many cosmetic mutations as she likes. Mutations are rolled randomly, although the player and GM can work together to ensure that the resulting character is one that the player wants to play. Unlike abilities gained from most other sources, mutations that affect the difficulty of tasks are assets, not skills. That means any step changes from a mutation are in addition to any step changes a player character might have from a skill.');
INSERT INTO `TheStrange`.`Razas` (`idRazas`, `nombre`, `descripcion`) VALUES (12, 'Kro', ' Kro appear as human-crow hybrid creatures, with wing-tips differentiated into fingers and beaks able to articulate human speech. A nonnative who translates into Crow Hollow gains the ability to fall safely from any height while in kro form and can glide five times as far as the distance fallen (or much farther, if one is skilled in gliding and the use of thermals). Native kro can glide too. In addition, those with the spark have a much higher chance of being quickened than do natives of most other recursions around Earth. When a native, quickened kro visits another recursion or Earth, instead of choosing a new focus, she can instead choose to take the form of a regularsized crow as a special exception. The native kro recursor retains all her knowledge, but none of the abilities she had as a recursor (including type abilities); she is restricted to the actions a crow could take (flight, limited speech, tricky tool use) until she translates to another recursion. A kro in crow form retains her level and health (or, in the rare case of a native PC kro, when in crow form she retains her stat Pool totals). Kro in crow form can sometimes take items they steal on Earth or other recursions back with them to Crow Hollow. ');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TheStrange`.`RazasRecursion`
-- -----------------------------------------------------
START TRANSACTION;
USE `TheStrange`;
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (1, 'Earth');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (1, 'Ardeyn');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (2, 'Ardeyn');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (3, 'Ardeyn');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (4, 'Ardeyn');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (5, 'Ardeyn');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (6, 'Ardeyn');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (7, 'Ardeyn');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (8, 'Ardeyn');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (9, 'Ardeyn');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (10, 'Ardeyn');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (1, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (2, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (3, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (4, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (5, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (6, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (7, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (8, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (9, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (10, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (11, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (12, 'THE STRANGE');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (1, 'Atom Nocturne');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (1, 'Cataclyst');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (11, 'Cataclyst');
INSERT INTO `TheStrange`.`RazasRecursion` (`Razas_idRazas`, `Recursion_nombre`) VALUES (12, 'Crow hollow');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TheStrange`.`Clase`
-- -----------------------------------------------------
START TRANSACTION;
USE `TheStrange`;
INSERT INTO `TheStrange`.`Clase` (`nombre`, `traslacion`, `minimoDispositivos`, `descripcion`) VALUES ('Vector', ' easing', 2, ' Vectors are action-oriented people: athletes, soldiers, firefighters, hunters, and explorers. They overcome challenges in a straightforward, physical way. When something needs doing, they do it. They are characterized as much by their motivation as their physical talents. Vectors have great strength, stamina, and speed. It may seem that this is the sum total of the source of their abilities, but eventually they learn that in some small way, these abilities also originate with a connection to the Strange. These abilities‚Äîcalled moves‚Äîallow them to perform feats that normal people cannot do. Most vectors frequently train their bodies hard, and they have a background involving intense physical activity: sports, combat, occupations that involve action and exertion as well as skill. Vectors can be mountain climbers, rescue workers, and anything else of a similar vein.');
INSERT INTO `TheStrange`.`Clase` (`nombre`, `traslacion`, `minimoDispositivos`, `descripcion`) VALUES ('Paradox', 'initiating', 3, ' Paradoxes are the mad scientists, the sorcerers, and the breakers of the rules of reality. They are not bound by what others believe to be true. Paradoxes derive their abilities from a connection to the Strange, regardless of where they claim their power originates. With those abilities‚Äîcalled revisions‚Äîthey can transgress the laws of reality and alter the rules of a recursion. The Strange permeates the cosmos, though it‚Äôs hard for anyone not quickened to its Brash, page 46 Looks for Trouble, page 68 Medium weapon, page 86 CREATING YOUR CHARACTER 2 31 CHARACTER TYPE presence to interact with it like paradoxes (and spinners and vectors, in their own ways) do. Though most paradoxes refer to their special abilities as revisions, some refer to them as knacks, prayers, spells, or psychic gifts. Many paradoxes come from a background that includes extensive training of a scientific, technical, religious, or spiritual nature. They could also have experience in an esoteric order. As a result, they have an aptitude with equipment, paraphernalia, or rituals that may aid them in their pursuits.');
INSERT INTO `TheStrange`.`Clase` (`nombre`, `traslacion`, `minimoDispositivos`, `descripcion`) VALUES ('Spinner', 'hastening ', 2, ' Spinners are striking individuals, and they possess a personality that allows them to spin tales, spin lies, or spin a version of the truth that makes others see things in a whole new way. If anyone is going to make a friend of an enemy, bluff a way into a high-security compound, or mislead a world-devouring planetovore, it‚Äôs a spinner. Whether through leadership, influence, or behind-the-scenes manipulation, a spinner pushes things in the direction she wants them to go. Some spinner abilities could be attained through practice by anyone with some talent, but a spinner has an underlying facility: everything a spinner accomplishes is quickened by her connection to the Strange. A spinner‚Äôs abilities‚Äîcalled twists‚Äîcan be used to adjust, distort, and exploit.');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TheStrange`.`Poderes`
-- -----------------------------------------------------
START TRANSACTION;
USE `TheStrange`;
INSERT INTO `TheStrange`.`Poderes` (`Nombre`, `descripcion`, `coste`, `rango`, `proeza`, `Clase_nombre`) VALUES ('Bash', ' This is a pummeling melee attack. Your attack inflicts 1 less point of damage than normal, but dazes your target for one round, during which time the difficulty of all tasks it performs is modified by one step to its detriment. Action.', 1 Might point, 1, NULL, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `TheStrange`.`Caracteristicas`
-- -----------------------------------------------------
START TRANSACTION;
USE `TheStrange`;
INSERT INTO `TheStrange`.`Caracteristicas` (`idCaracteristicas`, `nombre`, `reserva`, `Ventaja`, `Clase_nombre`) VALUES (1, 'Might', '10', '1', 'Vector');
INSERT INTO `TheStrange`.`Caracteristicas` (`idCaracteristicas`, `nombre`, `reserva`, `Ventaja`, `Clase_nombre`) VALUES (2, 'Speed', '10', '1', 'Vector');
INSERT INTO `TheStrange`.`Caracteristicas` (`idCaracteristicas`, `nombre`, `reserva`, `Ventaja`, `Clase_nombre`) VALUES (3, 'Intellect', '8', '0', 'Vector');
INSERT INTO `TheStrange`.`Caracteristicas` (`idCaracteristicas`, `nombre`, `reserva`, `Ventaja`, `Clase_nombre`) VALUES (4, 'Might', '8', '0', 'Paradox');
INSERT INTO `TheStrange`.`Caracteristicas` (`idCaracteristicas`, `nombre`, `reserva`, `Ventaja`, `Clase_nombre`) VALUES (5, 'Speed', '8', '0', 'Paradox');
INSERT INTO `TheStrange`.`Caracteristicas` (`idCaracteristicas`, `nombre`, `reserva`, `Ventaja`, `Clase_nombre`) VALUES (6, 'Itellect', '12', '1', 'Paradox');
INSERT INTO `TheStrange`.`Caracteristicas` (`idCaracteristicas`, `nombre`, `reserva`, `Ventaja`, `Clase_nombre`) VALUES (7, 'Might', '9', '0', 'Spinner');
INSERT INTO `TheStrange`.`Caracteristicas` (`idCaracteristicas`, `nombre`, `reserva`, `Ventaja`, `Clase_nombre`) VALUES (8, 'Speed', '9', '1', 'Spinner');
INSERT INTO `TheStrange`.`Caracteristicas` (`idCaracteristicas`, `nombre`, `reserva`, `Ventaja`, `Clase_nombre`) VALUES (9, 'Intellect', '10', '1', 'Spinner');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TheStrange`.`ley`
-- -----------------------------------------------------
START TRANSACTION;
USE `TheStrange`;
INSERT INTO `TheStrange`.`ley` (`id`, `nombre`, `descripcion`) VALUES (1, 'Standard Physics', ' This law is the basic law that most recursions possess (and is the law that Earth operates under, which means it includes everything people have discovered with the scientific method about reality in the real universe). Standard Physics is actually a more complete and robust set of laws than the more extreme laws, which is why it‚Äôs more  difficult to find ‚Äúexploits‚Äù in Standard Physics that allow for amazing effects.');
INSERT INTO `TheStrange`.`ley` (`id`, `nombre`, `descripcion`) VALUES (2, 'Magic', ' A recursion that supports the law of Magic assumes a baseline Standard Physics law, but Magic picks up where the latter leaves off, and it allows adepts to create a wide variety of sorcerous effects through spellcasting, sympathetic magic, voodoo, witchcraft, homoeopathy, fae enchantments, and so on. Different recursions might support different styles, traditions, and ‚Äúrules‚Äù of magic, but the underlying Magic law is what makes those traditions possible. Ardeyn is one recursion that operates under the law of Magic.');
INSERT INTO `TheStrange`.`ley` (`id`, `nombre`, `descripcion`) VALUES (3, 'Mad Science', ' A recursion supporting Mad Science assumes the baseline Standard Physics law, but turns it up a notch. Whereas it‚Äôs devilishly difficult to create temporal loops, perfect clones, gravitons, perpetual motion machines, cold fusion devices on the desktop, personal force field projectors, flying armor suits, ray guns, and photonic lances on Earth, in a recursion that supports Mad Science, it‚Äôs not only possible but quite likely. As with Magic, a Mad Science recursion probably supports only a few particular threads or research directions of super science, not every possible permutation. Ruk is one recursion that operates under the law of Mad Science.');
INSERT INTO `TheStrange`.`ley` (`id`, `nombre`, `descripcion`) VALUES (4, 'Psionic', ' A recursion supporting Psionics assumes the baseline Standard Physics law, but provides a mental plane or similar mindspace framework that can support a raft of mental effects. A recursion with Psionics as a law might feature astral projection, psychometry, pyrokinesis, telepathy, hive minds, telekinesis, psychic surgery, aura reading, bilocation, and similar effects. As with Magic, a Psionics recursion usually supports only a few particular threads of psychic development according to a specified tradition of accessing mental powers, not every possible permutation. Atom Nocturne is a recursion that operates under the law of Psionics.');
INSERT INTO `TheStrange`.`ley` (`id`, `nombre`, `descripcion`) VALUES (5, 'Substandard Physics', 'In a recursion where Substandard Physics is law, many of the ‚Äúmiracles‚Äù of modern science fail to function, including gunpowder, artificial electricity, artificial radio, and so on. Generally speaking, a world of Substandard Physics can support technology and effects on the level of Earth‚Äôs early Iron Age.');
INSERT INTO `TheStrange`.`ley` (`id`, `nombre`, `descripcion`) VALUES (6, 'Exotic', ' The Exotic law is the catch-all law that particularly odd recursions might fall into.  Usually, an Exotic recursion is one where the substance of the recursion itself is unusual, such as being composed of living flesh, fire, dream, acidic slime, solid starlight, writhing worms, fairy wings, or another unexpected form. Generally speaking, a recursion lower than level 4 can‚Äôt support Exotic elements.');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TheStrange`.`LeyRecursion`
-- -----------------------------------------------------
START TRANSACTION;
USE `TheStrange`;
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (1, 'Earth');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (2, 'Ardeyn');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (3, 'Ruk');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (1, 'THE STRANGE');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (2, 'THE STRANGE');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (3, 'THE STRANGE');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (4, 'THE STRANGE');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (5, 'THE STRANGE');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (6, 'THE STRANGE');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (4, 'Atom Nocturne');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (2, 'Cataclyst');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (3, 'Cataclyst');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (2, 'Crow hollow');
INSERT INTO `TheStrange`.`LeyRecursion` (`ley_nombre`, `Recursion_nombre`) VALUES (3, 'Crow hollow');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TheStrange`.`HabilidadesClase`
-- -----------------------------------------------------
START TRANSACTION;
USE `TheStrange`;
INSERT INTO `TheStrange`.`HabilidadesClase` (`idHabilidad`, `nombre`, `descripcion`, `rango`, `Clase_nombre`) VALUES (1, 'Defensive', ' You are trained in Speed defense actions when not wearing armor. Enabler', '1', 'Vector');
INSERT INTO `TheStrange`.`HabilidadesClase` (`idHabilidad`, `nombre`, `descripcion`, `rango`, `Clase_nombre`) VALUES (2, 'Practiced With All Weapons', ' You can use any weapon. Enabler.', '1', 'Vector');
INSERT INTO `TheStrange`.`HabilidadesClase` (`idHabilidad`, `nombre`, `descripcion`, `rango`, `Clase_nombre`) VALUES (3, 'Physical Skills', ' You are trained in your choice of two of the following: balancing, climbing, jumping, running, or swimming. Enabler.', '1', 'Vector');

COMMIT;

